JavaScript-Regex-ISO-datetime-
==============================
YYYY-MM-DDTHH:MM:SSZ

Validate a date using a regular expression(RegExp)
First I identified the months with 28 days,29 days(I put the condition for leap years -here is a list with leap years(1800-2400): http://kalender-365.de/leap-years.php -,when February has 29 days),30 days and 31 days.I also added the time.It works just for the years between 1800-2099.

^(((18|19|20)[0-9]{2})[-](02)[-](0[1-9]|1[0-9]|2[0-8]))|((((18|19|20)(04|08|[2468][048]|[13579][26]))|2000)[-](02)[-]29)|(((18|19|20)[0-9]{2})[-](0[469]|11)[-](0[1-9]|[12][0-9]|30))|(((18|19|20)[0-9]{2})[-](0[13578]|1[02])[-](0[1-9]|[12][0-9]|3[01]))|(T([0-5][0-9]|60)[:]([0-5][0-9]|60)[:]([0-5][0-9]|60)Z)$

^ assert position at start of a line
$ assert position at end of a line

For months with 28 days:
( ((18|19|20)[0-9]{2}) [-] (02)  [-]  (0[1-9]|1[0-9]|2[0-8]) )

For the leap years (1800-2099) when February has 29 days:
( (( (18|19|20)(04|08|[2468][048]|[13579][26]))|2000)   [-] (02) [-] 29 )

For months with 30 days:
( ((18|19|20)[0-9]{2})  [-]  (0[469]|11)  [-]  (0[1-9]|[12][0-9]|30) )

For months with 31 days:
( ((18|19|20)[0-9]{2})  [-]  (0[13578]|1[02])  [-]  (0[1-9]|[12][0-9]|3[01]) )

And for the time:
( T([0-5][0-9]|60)  [:]  ([0-5][0-9]|60)  [:]  ([0-5][0-9]|60)Z ) 



Test:

0000-10-13T23:08:56Z -not valid,it works just for the years between 1800-2099
1232-09-12T12:34:00Z -not valid,it works just for the years between 1800-2099
2014-10-20T15:09:10Z -valid
1970-02-29T23:08:56Z -not valid,not a leap year
1988-02-29T12:23:26Z -valid,leap year
1872-02-29T20:43:34Z -valid,leap year
1872-02-31T20:43:34Z -not valid,31 february doesn't exist
